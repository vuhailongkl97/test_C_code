
a.out:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x2b3>
 248:	78 38                	js     282 <_init-0x2a6>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 13                	add    %dl,(%rbx)
 285:	73 58                	jae    2df <_init-0x249>
 287:	c4                   	(bad)  
 288:	90                   	nop
 289:	5f                   	pop    %rdi
 28a:	fe 09                	decb   (%rcx)
 28c:	fd                   	std    
 28d:	c7 c1 44 bd 90 50    	mov    $0x5090bd44,%ecx
 293:	8a c5                	mov    %ch,%al
 295:	ab                   	stos   %eax,%es:(%rdi)
 296:	af                   	scas   %es:(%rdi),%eax
 297:	a3                   	.byte 0xa3

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	44 00 00             	add    %r8b,(%rax)
 2d3:	00 20                	add    %ah,(%rax)
	...
 2e5:	00 00                	add    %al,(%rax)
 2e7:	00 0b                	add    %cl,(%rbx)
 2e9:	00 00                	add    %al,(%rax)
 2eb:	00 12                	add    %dl,(%rdx)
	...
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 10                	add    %dl,(%rax)
 301:	00 00                	add    %al,(%rax)
 303:	00 12                	add    %dl,(%rdx)
	...
 315:	00 00                	add    %al,(%rax)
 317:	00 26                	add    %ah,(%rsi)
 319:	00 00                	add    %al,(%rax)
 31b:	00 12                	add    %dl,(%rdx)
	...
 32d:	00 00                	add    %al,(%rax)
 32f:	00 60 00             	add    %ah,0x0(%rax)
 332:	00 00                	add    %al,(%rax)
 334:	20 00                	and    %al,(%rax)
	...
 346:	00 00                	add    %al,(%rax)
 348:	6f                   	outsl  %ds:(%rsi),(%dx)
 349:	00 00                	add    %al,(%rax)
 34b:	00 20                	add    %ah,(%rax)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 17                	add    %dl,(%rdi)
 361:	00 00                	add    %al,(%rax)
 363:	00 22                	add    %ah,(%rdx)
	...

Disassembly of section .dynstr:

0000000000000378 <.dynstr>:
 378:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 37c:	63 2e                	movslq (%rsi),%ebp
 37e:	73 6f                	jae    3ef <_init-0x139>
 380:	2e 36 00 70 75       	cs add %dh,%ss:0x75(%rax)
 385:	74 73                	je     3fa <_init-0x12e>
 387:	00 70 72             	add    %dh,0x72(%rax)
 38a:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 391:	63 78 61             	movslq 0x61(%rax),%edi
 394:	5f                   	pop    %rdi
 395:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 39b:	7a 65                	jp     402 <_init-0x126>
 39d:	00 5f 5f             	add    %bl,0x5f(%rdi)
 3a0:	6c                   	insb   (%dx),%es:(%rdi)
 3a1:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 3a8:	72 74                	jb     41e <_init-0x10a>
 3aa:	5f                   	pop    %rdi
 3ab:	6d                   	insl   (%dx),%es:(%rdi)
 3ac:	61                   	(bad)  
 3ad:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 3b4:	43 5f                	rex.XB pop %r15
 3b6:	32 2e                	xor    (%rsi),%ch
 3b8:	32 2e                	xor    (%rsi),%ch
 3ba:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 3bf:	4d 5f                	rex.WRB pop %r15
 3c1:	64 65 72 65          	fs gs jb 42a <_init-0xfe>
 3c5:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 3cc:	4d 
 3cd:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 3cf:	6f                   	outsl  %ds:(%rsi),(%dx)
 3d0:	6e                   	outsb  %ds:(%rsi),(%dx)
 3d1:	65 54                	gs push %rsp
 3d3:	61                   	(bad)  
 3d4:	62                   	(bad)  
 3d5:	6c                   	insb   (%dx),%es:(%rdi)
 3d6:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 3da:	67 6d                	insl   (%dx),%es:(%edi)
 3dc:	6f                   	outsl  %ds:(%rsi),(%dx)
 3dd:	6e                   	outsb  %ds:(%rsi),(%dx)
 3de:	5f                   	pop    %rdi
 3df:	73 74                	jae    455 <_init-0xd3>
 3e1:	61                   	(bad)  
 3e2:	72 74                	jb     458 <_init-0xd0>
 3e4:	5f                   	pop    %rdi
 3e5:	5f                   	pop    %rdi
 3e6:	00 5f 49             	add    %bl,0x49(%rdi)
 3e9:	54                   	push   %rsp
 3ea:	4d 5f                	rex.WRB pop %r15
 3ec:	72 65                	jb     453 <_init-0xd5>
 3ee:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 3f5:	4d 
 3f6:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 3f8:	6f                   	outsl  %ds:(%rsi),(%dx)
 3f9:	6e                   	outsb  %ds:(%rsi),(%dx)
 3fa:	65 54                	gs push %rsp
 3fc:	61                   	(bad)  
 3fd:	62                   	.byte 0x62
 3fe:	6c                   	insb   (%dx),%es:(%rdi)
 3ff:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000402 <.gnu.version>:
 402:	00 00                	add    %al,(%rax)
 404:	00 00                	add    %al,(%rax)
 406:	02 00                	add    (%rax),%al
 408:	02 00                	add    (%rax),%al
 40a:	02 00                	add    (%rax),%al
 40c:	00 00                	add    %al,(%rax)
 40e:	00 00                	add    %al,(%rax)
 410:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000418 <.gnu.version_r>:
 418:	01 00                	add    %eax,(%rax)
 41a:	01 00                	add    %eax,(%rax)
 41c:	01 00                	add    %eax,(%rax)
 41e:	00 00                	add    %al,(%rax)
 420:	10 00                	adc    %al,(%rax)
 422:	00 00                	add    %al,(%rax)
 424:	00 00                	add    %al,(%rax)
 426:	00 00                	add    %al,(%rax)
 428:	75 1a                	jne    444 <_init-0xe4>
 42a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 430:	38 00                	cmp    %al,(%rax)
 432:	00 00                	add    %al,(%rax)
 434:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000438 <.rela.dyn>:
 438:	b0 0d                	mov    $0xd,%al
 43a:	20 00                	and    %al,(%rax)
 43c:	00 00                	add    %al,(%rax)
 43e:	00 00                	add    %al,(%rax)
 440:	08 00                	or     %al,(%rax)
 442:	00 00                	add    %al,(%rax)
 444:	00 00                	add    %al,(%rax)
 446:	00 00                	add    %al,(%rax)
 448:	80 06 00             	addb   $0x0,(%rsi)
 44b:	00 00                	add    %al,(%rax)
 44d:	00 00                	add    %al,(%rax)
 44f:	00 b8 0d 20 00 00    	add    %bh,0x200d(%rax)
 455:	00 00                	add    %al,(%rax)
 457:	00 08                	add    %cl,(%rax)
 459:	00 00                	add    %al,(%rax)
 45b:	00 00                	add    %al,(%rax)
 45d:	00 00                	add    %al,(%rax)
 45f:	00 40 06             	add    %al,0x6(%rax)
 462:	00 00                	add    %al,(%rax)
 464:	00 00                	add    %al,(%rax)
 466:	00 00                	add    %al,(%rax)
 468:	08 10                	or     %dl,(%rax)
 46a:	20 00                	and    %al,(%rax)
 46c:	00 00                	add    %al,(%rax)
 46e:	00 00                	add    %al,(%rax)
 470:	08 00                	or     %al,(%rax)
 472:	00 00                	add    %al,(%rax)
 474:	00 00                	add    %al,(%rax)
 476:	00 00                	add    %al,(%rax)
 478:	08 10                	or     %dl,(%rax)
 47a:	20 00                	and    %al,(%rax)
 47c:	00 00                	add    %al,(%rax)
 47e:	00 00                	add    %al,(%rax)
 480:	d8 0f                	fmuls  (%rdi)
 482:	20 00                	and    %al,(%rax)
 484:	00 00                	add    %al,(%rax)
 486:	00 00                	add    %al,(%rax)
 488:	06                   	(bad)  
 489:	00 00                	add    %al,(%rax)
 48b:	00 01                	add    %al,(%rcx)
	...
 495:	00 00                	add    %al,(%rax)
 497:	00 e0                	add    %ah,%al
 499:	0f 20 00             	mov    %cr0,%rax
 49c:	00 00                	add    %al,(%rax)
 49e:	00 00                	add    %al,(%rax)
 4a0:	06                   	(bad)  
 4a1:	00 00                	add    %al,(%rax)
 4a3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 4ae:	00 00                	add    %al,(%rax)
 4b0:	e8 0f 20 00 00       	callq  24c4 <__FRAME_END__+0x1bf0>
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 06                	add    %al,(%rsi)
 4b9:	00 00                	add    %al,(%rax)
 4bb:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 4c1 <_init-0x67>
 4c1:	00 00                	add    %al,(%rax)
 4c3:	00 00                	add    %al,(%rax)
 4c5:	00 00                	add    %al,(%rax)
 4c7:	00 f0                	add    %dh,%al
 4c9:	0f 20 00             	mov    %cr0,%rax
 4cc:	00 00                	add    %al,(%rax)
 4ce:	00 00                	add    %al,(%rax)
 4d0:	06                   	(bad)  
 4d1:	00 00                	add    %al,(%rax)
 4d3:	00 06                	add    %al,(%rsi)
	...
 4dd:	00 00                	add    %al,(%rax)
 4df:	00 f8                	add    %bh,%al
 4e1:	0f 20 00             	mov    %cr0,%rax
 4e4:	00 00                	add    %al,(%rax)
 4e6:	00 00                	add    %al,(%rax)
 4e8:	06                   	(bad)  
 4e9:	00 00                	add    %al,(%rax)
 4eb:	00 07                	add    %al,(%rdi)
	...

Disassembly of section .rela.plt:

00000000000004f8 <.rela.plt>:
 4f8:	c8 0f 20 00          	enterq $0x200f,$0x0
 4fc:	00 00                	add    %al,(%rax)
 4fe:	00 00                	add    %al,(%rax)
 500:	07                   	(bad)  
 501:	00 00                	add    %al,(%rax)
 503:	00 02                	add    %al,(%rdx)
	...
 50d:	00 00                	add    %al,(%rax)
 50f:	00 d0                	add    %dl,%al
 511:	0f 20 00             	mov    %cr0,%rax
 514:	00 00                	add    %al,(%rax)
 516:	00 00                	add    %al,(%rax)
 518:	07                   	(bad)  
 519:	00 00                	add    %al,(%rax)
 51b:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .init:

0000000000000528 <_init>:
 528:	48 83 ec 08          	sub    $0x8,%rsp
 52c:	48 8b 05 b5 0a 20 00 	mov    0x200ab5(%rip),%rax        # 200fe8 <__gmon_start__>
 533:	48 85 c0             	test   %rax,%rax
 536:	74 02                	je     53a <_init+0x12>
 538:	ff d0                	callq  *%rax
 53a:	48 83 c4 08          	add    $0x8,%rsp
 53e:	c3                   	retq   

Disassembly of section .plt:

0000000000000540 <.plt>:
 540:	ff 35 72 0a 20 00    	pushq  0x200a72(%rip)        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
 546:	ff 25 74 0a 20 00    	jmpq   *0x200a74(%rip)        # 200fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
 54c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000550 <puts@plt>:
 550:	ff 25 72 0a 20 00    	jmpq   *0x200a72(%rip)        # 200fc8 <puts@GLIBC_2.2.5>
 556:	68 00 00 00 00       	pushq  $0x0
 55b:	e9 e0 ff ff ff       	jmpq   540 <.plt>

0000000000000560 <printf@plt>:
 560:	ff 25 6a 0a 20 00    	jmpq   *0x200a6a(%rip)        # 200fd0 <printf@GLIBC_2.2.5>
 566:	68 01 00 00 00       	pushq  $0x1
 56b:	e9 d0 ff ff ff       	jmpq   540 <.plt>

Disassembly of section .plt.got:

0000000000000570 <__cxa_finalize@plt>:
 570:	ff 25 82 0a 20 00    	jmpq   *0x200a82(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 576:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000580 <_start>:
 580:	31 ed                	xor    %ebp,%ebp
 582:	49 89 d1             	mov    %rdx,%r9
 585:	5e                   	pop    %rsi
 586:	48 89 e2             	mov    %rsp,%rdx
 589:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 58d:	50                   	push   %rax
 58e:	54                   	push   %rsp
 58f:	4c 8d 05 ba 01 00 00 	lea    0x1ba(%rip),%r8        # 750 <__libc_csu_fini>
 596:	48 8d 0d 43 01 00 00 	lea    0x143(%rip),%rcx        # 6e0 <__libc_csu_init>
 59d:	48 8d 3d 1a 01 00 00 	lea    0x11a(%rip),%rdi        # 6be <main>
 5a4:	ff 15 36 0a 20 00    	callq  *0x200a36(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 5aa:	f4                   	hlt    
 5ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000005b0 <deregister_tm_clones>:
 5b0:	48 8d 3d 59 0a 20 00 	lea    0x200a59(%rip),%rdi        # 201010 <__TMC_END__>
 5b7:	55                   	push   %rbp
 5b8:	48 8d 05 51 0a 20 00 	lea    0x200a51(%rip),%rax        # 201010 <__TMC_END__>
 5bf:	48 39 f8             	cmp    %rdi,%rax
 5c2:	48 89 e5             	mov    %rsp,%rbp
 5c5:	74 19                	je     5e0 <deregister_tm_clones+0x30>
 5c7:	48 8b 05 0a 0a 20 00 	mov    0x200a0a(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 5ce:	48 85 c0             	test   %rax,%rax
 5d1:	74 0d                	je     5e0 <deregister_tm_clones+0x30>
 5d3:	5d                   	pop    %rbp
 5d4:	ff e0                	jmpq   *%rax
 5d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 5dd:	00 00 00 
 5e0:	5d                   	pop    %rbp
 5e1:	c3                   	retq   
 5e2:	0f 1f 40 00          	nopl   0x0(%rax)
 5e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 5ed:	00 00 00 

00000000000005f0 <register_tm_clones>:
 5f0:	48 8d 3d 19 0a 20 00 	lea    0x200a19(%rip),%rdi        # 201010 <__TMC_END__>
 5f7:	48 8d 35 12 0a 20 00 	lea    0x200a12(%rip),%rsi        # 201010 <__TMC_END__>
 5fe:	55                   	push   %rbp
 5ff:	48 29 fe             	sub    %rdi,%rsi
 602:	48 89 e5             	mov    %rsp,%rbp
 605:	48 c1 fe 03          	sar    $0x3,%rsi
 609:	48 89 f0             	mov    %rsi,%rax
 60c:	48 c1 e8 3f          	shr    $0x3f,%rax
 610:	48 01 c6             	add    %rax,%rsi
 613:	48 d1 fe             	sar    %rsi
 616:	74 18                	je     630 <register_tm_clones+0x40>
 618:	48 8b 05 d1 09 20 00 	mov    0x2009d1(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 61f:	48 85 c0             	test   %rax,%rax
 622:	74 0c                	je     630 <register_tm_clones+0x40>
 624:	5d                   	pop    %rbp
 625:	ff e0                	jmpq   *%rax
 627:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 62e:	00 00 
 630:	5d                   	pop    %rbp
 631:	c3                   	retq   
 632:	0f 1f 40 00          	nopl   0x0(%rax)
 636:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 63d:	00 00 00 

0000000000000640 <__do_global_dtors_aux>:
 640:	80 3d c9 09 20 00 00 	cmpb   $0x0,0x2009c9(%rip)        # 201010 <__TMC_END__>
 647:	75 2f                	jne    678 <__do_global_dtors_aux+0x38>
 649:	48 83 3d a7 09 20 00 	cmpq   $0x0,0x2009a7(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 650:	00 
 651:	55                   	push   %rbp
 652:	48 89 e5             	mov    %rsp,%rbp
 655:	74 0c                	je     663 <__do_global_dtors_aux+0x23>
 657:	48 8b 3d aa 09 20 00 	mov    0x2009aa(%rip),%rdi        # 201008 <__dso_handle>
 65e:	e8 0d ff ff ff       	callq  570 <__cxa_finalize@plt>
 663:	e8 48 ff ff ff       	callq  5b0 <deregister_tm_clones>
 668:	c6 05 a1 09 20 00 01 	movb   $0x1,0x2009a1(%rip)        # 201010 <__TMC_END__>
 66f:	5d                   	pop    %rbp
 670:	c3                   	retq   
 671:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 678:	f3 c3                	repz retq 
 67a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000680 <frame_dummy>:
 680:	55                   	push   %rbp
 681:	48 89 e5             	mov    %rsp,%rbp
 684:	5d                   	pop    %rbp
 685:	e9 66 ff ff ff       	jmpq   5f0 <register_tm_clones>

000000000000068a <ham>:
 68a:	55                   	push   %rbp
 68b:	48 89 e5             	mov    %rsp,%rbp
 68e:	48 83 ec 10          	sub    $0x10,%rsp
 692:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 699:	b8 0a 00 00 00       	mov    $0xa,%eax
 69e:	99                   	cltd   
 69f:	f7 7d f8             	idivl  -0x8(%rbp)
 6a2:	89 45 fc             	mov    %eax,-0x4(%rbp)
 6a5:	8b 45 fc             	mov    -0x4(%rbp),%eax
 6a8:	89 c6                	mov    %eax,%esi
 6aa:	48 8d 3d b3 00 00 00 	lea    0xb3(%rip),%rdi        # 764 <_IO_stdin_used+0x4>
 6b1:	b8 00 00 00 00       	mov    $0x0,%eax
 6b6:	e8 a5 fe ff ff       	callq  560 <printf@plt>
 6bb:	90                   	nop
 6bc:	c9                   	leaveq 
 6bd:	c3                   	retq   

00000000000006be <main>:
 6be:	55                   	push   %rbp
 6bf:	48 89 e5             	mov    %rsp,%rbp
 6c2:	48 8d 3d 9e 00 00 00 	lea    0x9e(%rip),%rdi        # 767 <_IO_stdin_used+0x7>
 6c9:	e8 82 fe ff ff       	callq  550 <puts@plt>
 6ce:	b8 00 00 00 00       	mov    $0x0,%eax
 6d3:	e8 b2 ff ff ff       	callq  68a <ham>
 6d8:	b8 00 00 00 00       	mov    $0x0,%eax
 6dd:	5d                   	pop    %rbp
 6de:	c3                   	retq   
 6df:	90                   	nop

00000000000006e0 <__libc_csu_init>:
 6e0:	41 57                	push   %r15
 6e2:	41 56                	push   %r14
 6e4:	49 89 d7             	mov    %rdx,%r15
 6e7:	41 55                	push   %r13
 6e9:	41 54                	push   %r12
 6eb:	4c 8d 25 be 06 20 00 	lea    0x2006be(%rip),%r12        # 200db0 <__frame_dummy_init_array_entry>
 6f2:	55                   	push   %rbp
 6f3:	48 8d 2d be 06 20 00 	lea    0x2006be(%rip),%rbp        # 200db8 <__init_array_end>
 6fa:	53                   	push   %rbx
 6fb:	41 89 fd             	mov    %edi,%r13d
 6fe:	49 89 f6             	mov    %rsi,%r14
 701:	4c 29 e5             	sub    %r12,%rbp
 704:	48 83 ec 08          	sub    $0x8,%rsp
 708:	48 c1 fd 03          	sar    $0x3,%rbp
 70c:	e8 17 fe ff ff       	callq  528 <_init>
 711:	48 85 ed             	test   %rbp,%rbp
 714:	74 20                	je     736 <__libc_csu_init+0x56>
 716:	31 db                	xor    %ebx,%ebx
 718:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 71f:	00 
 720:	4c 89 fa             	mov    %r15,%rdx
 723:	4c 89 f6             	mov    %r14,%rsi
 726:	44 89 ef             	mov    %r13d,%edi
 729:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 72d:	48 83 c3 01          	add    $0x1,%rbx
 731:	48 39 dd             	cmp    %rbx,%rbp
 734:	75 ea                	jne    720 <__libc_csu_init+0x40>
 736:	48 83 c4 08          	add    $0x8,%rsp
 73a:	5b                   	pop    %rbx
 73b:	5d                   	pop    %rbp
 73c:	41 5c                	pop    %r12
 73e:	41 5d                	pop    %r13
 740:	41 5e                	pop    %r14
 742:	41 5f                	pop    %r15
 744:	c3                   	retq   
 745:	90                   	nop
 746:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 74d:	00 00 00 

0000000000000750 <__libc_csu_fini>:
 750:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000754 <_fini>:
 754:	48 83 ec 08          	sub    $0x8,%rsp
 758:	48 83 c4 08          	add    $0x8,%rsp
 75c:	c3                   	retq   

Disassembly of section .rodata:

0000000000000760 <_IO_stdin_used>:
 760:	01 00                	add    %eax,(%rax)
 762:	02 00                	add    (%rax),%al
 764:	25 64 00 61 62       	and    $0x62610064,%eax
 769:	63 00                	movslq (%rax),%eax

Disassembly of section .eh_frame_hdr:

000000000000076c <__GNU_EH_FRAME_HDR>:
 76c:	01 1b                	add    %ebx,(%rbx)
 76e:	03 3b                	add    (%rbx),%edi
 770:	40 00 00             	add    %al,(%rax)
 773:	00 07                	add    %al,(%rdi)
 775:	00 00                	add    %al,(%rax)
 777:	00 d4                	add    %dl,%ah
 779:	fd                   	std    
 77a:	ff                   	(bad)  
 77b:	ff 8c 00 00 00 04 fe 	decl   -0x1fc0000(%rax,%rax,1)
 782:	ff                   	(bad)  
 783:	ff b4 00 00 00 14 fe 	pushq  -0x1ec0000(%rax,%rax,1)
 78a:	ff                   	(bad)  
 78b:	ff 5c 00 00          	lcall  *0x0(%rax,%rax,1)
 78f:	00 1e                	add    %bl,(%rsi)
 791:	ff                   	(bad)  
 792:	ff                   	(bad)  
 793:	ff cc                	dec    %esp
 795:	00 00                	add    %al,(%rax)
 797:	00 52 ff             	add    %dl,-0x1(%rdx)
 79a:	ff                   	(bad)  
 79b:	ff                   	(bad)  
 79c:	ec                   	in     (%dx),%al
 79d:	00 00                	add    %al,(%rax)
 79f:	00 74 ff ff          	add    %dh,-0x1(%rdi,%rdi,8)
 7a3:	ff 0c 01             	decl   (%rcx,%rax,1)
 7a6:	00 00                	add    %al,(%rax)
 7a8:	e4 ff                	in     $0xff,%al
 7aa:	ff                   	(bad)  
 7ab:	ff 54 01 00          	callq  *0x0(%rcx,%rax,1)
	...

Disassembly of section .eh_frame:

00000000000007b0 <__FRAME_END__-0x124>:
 7b0:	14 00                	adc    $0x0,%al
 7b2:	00 00                	add    %al,(%rax)
 7b4:	00 00                	add    %al,(%rax)
 7b6:	00 00                	add    %al,(%rax)
 7b8:	01 7a 52             	add    %edi,0x52(%rdx)
 7bb:	00 01                	add    %al,(%rcx)
 7bd:	78 10                	js     7cf <__GNU_EH_FRAME_HDR+0x63>
 7bf:	01 1b                	add    %ebx,(%rbx)
 7c1:	0c 07                	or     $0x7,%al
 7c3:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
 7c9:	00 00                	add    %al,(%rax)
 7cb:	00 1c 00             	add    %bl,(%rax,%rax,1)
 7ce:	00 00                	add    %al,(%rax)
 7d0:	b0 fd                	mov    $0xfd,%al
 7d2:	ff                   	(bad)  
 7d3:	ff 2b                	ljmp   *(%rbx)
	...
 7dd:	00 00                	add    %al,(%rax)
 7df:	00 14 00             	add    %dl,(%rax,%rax,1)
 7e2:	00 00                	add    %al,(%rax)
 7e4:	00 00                	add    %al,(%rax)
 7e6:	00 00                	add    %al,(%rax)
 7e8:	01 7a 52             	add    %edi,0x52(%rdx)
 7eb:	00 01                	add    %al,(%rcx)
 7ed:	78 10                	js     7ff <__GNU_EH_FRAME_HDR+0x93>
 7ef:	01 1b                	add    %ebx,(%rbx)
 7f1:	0c 07                	or     $0x7,%al
 7f3:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
 7f9:	00 00                	add    %al,(%rax)
 7fb:	00 1c 00             	add    %bl,(%rax,%rax,1)
 7fe:	00 00                	add    %al,(%rax)
 800:	40 fd                	rex std 
 802:	ff                   	(bad)  
 803:	ff 30                	pushq  (%rax)
 805:	00 00                	add    %al,(%rax)
 807:	00 00                	add    %al,(%rax)
 809:	0e                   	(bad)  
 80a:	10 46 0e             	adc    %al,0xe(%rsi)
 80d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
 810:	0b 77 08             	or     0x8(%rdi),%esi
 813:	80 00 3f             	addb   $0x3f,(%rax)
 816:	1a 3b                	sbb    (%rbx),%bh
 818:	2a 33                	sub    (%rbx),%dh
 81a:	24 22                	and    $0x22,%al
 81c:	00 00                	add    %al,(%rax)
 81e:	00 00                	add    %al,(%rax)
 820:	14 00                	adc    $0x0,%al
 822:	00 00                	add    %al,(%rax)
 824:	44 00 00             	add    %r8b,(%rax)
 827:	00 48 fd             	add    %cl,-0x3(%rax)
 82a:	ff                   	(bad)  
 82b:	ff 08                	decl   (%rax)
	...
 835:	00 00                	add    %al,(%rax)
 837:	00 1c 00             	add    %bl,(%rax,%rax,1)
 83a:	00 00                	add    %al,(%rax)
 83c:	5c                   	pop    %rsp
 83d:	00 00                	add    %al,(%rax)
 83f:	00 4a fe             	add    %cl,-0x2(%rdx)
 842:	ff                   	(bad)  
 843:	ff 34 00             	pushq  (%rax,%rax,1)
 846:	00 00                	add    %al,(%rax)
 848:	00 41 0e             	add    %al,0xe(%rcx)
 84b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 851:	6f                   	outsl  %ds:(%rsi),(%dx)
 852:	0c 07                	or     $0x7,%al
 854:	08 00                	or     %al,(%rax)
 856:	00 00                	add    %al,(%rax)
 858:	1c 00                	sbb    $0x0,%al
 85a:	00 00                	add    %al,(%rax)
 85c:	7c 00                	jl     85e <__GNU_EH_FRAME_HDR+0xf2>
 85e:	00 00                	add    %al,(%rax)
 860:	5e                   	pop    %rsi
 861:	fe                   	(bad)  
 862:	ff                   	(bad)  
 863:	ff 21                	jmpq   *(%rcx)
 865:	00 00                	add    %al,(%rax)
 867:	00 00                	add    %al,(%rax)
 869:	41 0e                	rex.B (bad) 
 86b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 871:	5c                   	pop    %rsp
 872:	0c 07                	or     $0x7,%al
 874:	08 00                	or     %al,(%rax)
 876:	00 00                	add    %al,(%rax)
 878:	44 00 00             	add    %r8b,(%rax)
 87b:	00 9c 00 00 00 60 fe 	add    %bl,-0x1a00000(%rax,%rax,1)
 882:	ff                   	(bad)  
 883:	ff 65 00             	jmpq   *0x0(%rbp)
 886:	00 00                	add    %al,(%rax)
 888:	00 42 0e             	add    %al,0xe(%rdx)
 88b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
 891:	8e 03                	mov    (%rbx),%es
 893:	45 0e                	rex.RB (bad) 
 895:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
 89b:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff863016e9 <_end+0xffffffff861006d1>
 8a1:	06                   	(bad)  
 8a2:	48 0e                	rex.W (bad) 
 8a4:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
 8aa:	72 0e                	jb     8ba <__GNU_EH_FRAME_HDR+0x14e>
 8ac:	38 41 0e             	cmp    %al,0xe(%rcx)
 8af:	30 41 0e             	xor    %al,0xe(%rcx)
 8b2:	28 42 0e             	sub    %al,0xe(%rdx)
 8b5:	20 42 0e             	and    %al,0xe(%rdx)
 8b8:	18 42 0e             	sbb    %al,0xe(%rdx)
 8bb:	10 42 0e             	adc    %al,0xe(%rdx)
 8be:	08 00                	or     %al,(%rax)
 8c0:	10 00                	adc    %al,(%rax)
 8c2:	00 00                	add    %al,(%rax)
 8c4:	e4 00                	in     $0x0,%al
 8c6:	00 00                	add    %al,(%rax)
 8c8:	88 fe                	mov    %bh,%dh
 8ca:	ff                   	(bad)  
 8cb:	ff 02                	incl   (%rdx)
 8cd:	00 00                	add    %al,(%rax)
 8cf:	00 00                	add    %al,(%rax)
 8d1:	00 00                	add    %al,(%rax)
	...

00000000000008d4 <__FRAME_END__>:
 8d4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000200db0 <__frame_dummy_init_array_entry>:
  200db0:	80 06 00             	addb   $0x0,(%rsi)
  200db3:	00 00                	add    %al,(%rax)
  200db5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000200db8 <__do_global_dtors_aux_fini_array_entry>:
  200db8:	40 06                	rex (bad) 
  200dba:	00 00                	add    %al,(%rax)
  200dbc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000200dc0 <_DYNAMIC>:
  200dc0:	01 00                	add    %eax,(%rax)
  200dc2:	00 00                	add    %al,(%rax)
  200dc4:	00 00                	add    %al,(%rax)
  200dc6:	00 00                	add    %al,(%rax)
  200dc8:	01 00                	add    %eax,(%rax)
  200dca:	00 00                	add    %al,(%rax)
  200dcc:	00 00                	add    %al,(%rax)
  200dce:	00 00                	add    %al,(%rax)
  200dd0:	0c 00                	or     $0x0,%al
  200dd2:	00 00                	add    %al,(%rax)
  200dd4:	00 00                	add    %al,(%rax)
  200dd6:	00 00                	add    %al,(%rax)
  200dd8:	28 05 00 00 00 00    	sub    %al,0x0(%rip)        # 200dde <_DYNAMIC+0x1e>
  200dde:	00 00                	add    %al,(%rax)
  200de0:	0d 00 00 00 00       	or     $0x0,%eax
  200de5:	00 00                	add    %al,(%rax)
  200de7:	00 54 07 00          	add    %dl,0x0(%rdi,%rax,1)
  200deb:	00 00                	add    %al,(%rax)
  200ded:	00 00                	add    %al,(%rax)
  200def:	00 19                	add    %bl,(%rcx)
  200df1:	00 00                	add    %al,(%rax)
  200df3:	00 00                	add    %al,(%rax)
  200df5:	00 00                	add    %al,(%rax)
  200df7:	00 b0 0d 20 00 00    	add    %dh,0x200d(%rax)
  200dfd:	00 00                	add    %al,(%rax)
  200dff:	00 1b                	add    %bl,(%rbx)
  200e01:	00 00                	add    %al,(%rax)
  200e03:	00 00                	add    %al,(%rax)
  200e05:	00 00                	add    %al,(%rax)
  200e07:	00 08                	add    %cl,(%rax)
  200e09:	00 00                	add    %al,(%rax)
  200e0b:	00 00                	add    %al,(%rax)
  200e0d:	00 00                	add    %al,(%rax)
  200e0f:	00 1a                	add    %bl,(%rdx)
  200e11:	00 00                	add    %al,(%rax)
  200e13:	00 00                	add    %al,(%rax)
  200e15:	00 00                	add    %al,(%rax)
  200e17:	00 b8 0d 20 00 00    	add    %bh,0x200d(%rax)
  200e1d:	00 00                	add    %al,(%rax)
  200e1f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  200e22:	00 00                	add    %al,(%rax)
  200e24:	00 00                	add    %al,(%rax)
  200e26:	00 00                	add    %al,(%rax)
  200e28:	08 00                	or     %al,(%rax)
  200e2a:	00 00                	add    %al,(%rax)
  200e2c:	00 00                	add    %al,(%rax)
  200e2e:	00 00                	add    %al,(%rax)
  200e30:	f5                   	cmc    
  200e31:	fe                   	(bad)  
  200e32:	ff 6f 00             	ljmp   *0x0(%rdi)
  200e35:	00 00                	add    %al,(%rax)
  200e37:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  200e3d:	00 00                	add    %al,(%rax)
  200e3f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 200e45 <_DYNAMIC+0x85>
  200e45:	00 00                	add    %al,(%rax)
  200e47:	00 78 03             	add    %bh,0x3(%rax)
  200e4a:	00 00                	add    %al,(%rax)
  200e4c:	00 00                	add    %al,(%rax)
  200e4e:	00 00                	add    %al,(%rax)
  200e50:	06                   	(bad)  
  200e51:	00 00                	add    %al,(%rax)
  200e53:	00 00                	add    %al,(%rax)
  200e55:	00 00                	add    %al,(%rax)
  200e57:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  200e5d:	00 00                	add    %al,(%rax)
  200e5f:	00 0a                	add    %cl,(%rdx)
  200e61:	00 00                	add    %al,(%rax)
  200e63:	00 00                	add    %al,(%rax)
  200e65:	00 00                	add    %al,(%rax)
  200e67:	00 89 00 00 00 00    	add    %cl,0x0(%rcx)
  200e6d:	00 00                	add    %al,(%rax)
  200e6f:	00 0b                	add    %cl,(%rbx)
  200e71:	00 00                	add    %al,(%rax)
  200e73:	00 00                	add    %al,(%rax)
  200e75:	00 00                	add    %al,(%rax)
  200e77:	00 18                	add    %bl,(%rax)
  200e79:	00 00                	add    %al,(%rax)
  200e7b:	00 00                	add    %al,(%rax)
  200e7d:	00 00                	add    %al,(%rax)
  200e7f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 200e85 <_DYNAMIC+0xc5>
	...
  200e8d:	00 00                	add    %al,(%rax)
  200e8f:	00 03                	add    %al,(%rbx)
  200e91:	00 00                	add    %al,(%rax)
  200e93:	00 00                	add    %al,(%rax)
  200e95:	00 00                	add    %al,(%rax)
  200e97:	00 b0 0f 20 00 00    	add    %dh,0x200f(%rax)
  200e9d:	00 00                	add    %al,(%rax)
  200e9f:	00 02                	add    %al,(%rdx)
  200ea1:	00 00                	add    %al,(%rax)
  200ea3:	00 00                	add    %al,(%rax)
  200ea5:	00 00                	add    %al,(%rax)
  200ea7:	00 30                	add    %dh,(%rax)
  200ea9:	00 00                	add    %al,(%rax)
  200eab:	00 00                	add    %al,(%rax)
  200ead:	00 00                	add    %al,(%rax)
  200eaf:	00 14 00             	add    %dl,(%rax,%rax,1)
  200eb2:	00 00                	add    %al,(%rax)
  200eb4:	00 00                	add    %al,(%rax)
  200eb6:	00 00                	add    %al,(%rax)
  200eb8:	07                   	(bad)  
  200eb9:	00 00                	add    %al,(%rax)
  200ebb:	00 00                	add    %al,(%rax)
  200ebd:	00 00                	add    %al,(%rax)
  200ebf:	00 17                	add    %dl,(%rdi)
  200ec1:	00 00                	add    %al,(%rax)
  200ec3:	00 00                	add    %al,(%rax)
  200ec5:	00 00                	add    %al,(%rax)
  200ec7:	00 f8                	add    %bh,%al
  200ec9:	04 00                	add    $0x0,%al
  200ecb:	00 00                	add    %al,(%rax)
  200ecd:	00 00                	add    %al,(%rax)
  200ecf:	00 07                	add    %al,(%rdi)
  200ed1:	00 00                	add    %al,(%rax)
  200ed3:	00 00                	add    %al,(%rax)
  200ed5:	00 00                	add    %al,(%rax)
  200ed7:	00 38                	add    %bh,(%rax)
  200ed9:	04 00                	add    $0x0,%al
  200edb:	00 00                	add    %al,(%rax)
  200edd:	00 00                	add    %al,(%rax)
  200edf:	00 08                	add    %cl,(%rax)
  200ee1:	00 00                	add    %al,(%rax)
  200ee3:	00 00                	add    %al,(%rax)
  200ee5:	00 00                	add    %al,(%rax)
  200ee7:	00 c0                	add    %al,%al
  200ee9:	00 00                	add    %al,(%rax)
  200eeb:	00 00                	add    %al,(%rax)
  200eed:	00 00                	add    %al,(%rax)
  200eef:	00 09                	add    %cl,(%rcx)
  200ef1:	00 00                	add    %al,(%rax)
  200ef3:	00 00                	add    %al,(%rax)
  200ef5:	00 00                	add    %al,(%rax)
  200ef7:	00 18                	add    %bl,(%rax)
  200ef9:	00 00                	add    %al,(%rax)
  200efb:	00 00                	add    %al,(%rax)
  200efd:	00 00                	add    %al,(%rax)
  200eff:	00 1e                	add    %bl,(%rsi)
  200f01:	00 00                	add    %al,(%rax)
  200f03:	00 00                	add    %al,(%rax)
  200f05:	00 00                	add    %al,(%rax)
  200f07:	00 08                	add    %cl,(%rax)
  200f09:	00 00                	add    %al,(%rax)
  200f0b:	00 00                	add    %al,(%rax)
  200f0d:	00 00                	add    %al,(%rax)
  200f0f:	00 fb                	add    %bh,%bl
  200f11:	ff                   	(bad)  
  200f12:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f15:	00 00                	add    %al,(%rax)
  200f17:	00 01                	add    %al,(%rcx)
  200f19:	00 00                	add    %al,(%rax)
  200f1b:	08 00                	or     %al,(%rax)
  200f1d:	00 00                	add    %al,(%rax)
  200f1f:	00 fe                	add    %bh,%dh
  200f21:	ff                   	(bad)  
  200f22:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f25:	00 00                	add    %al,(%rax)
  200f27:	00 18                	add    %bl,(%rax)
  200f29:	04 00                	add    $0x0,%al
  200f2b:	00 00                	add    %al,(%rax)
  200f2d:	00 00                	add    %al,(%rax)
  200f2f:	00 ff                	add    %bh,%bh
  200f31:	ff                   	(bad)  
  200f32:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f35:	00 00                	add    %al,(%rax)
  200f37:	00 01                	add    %al,(%rcx)
  200f39:	00 00                	add    %al,(%rax)
  200f3b:	00 00                	add    %al,(%rax)
  200f3d:	00 00                	add    %al,(%rax)
  200f3f:	00 f0                	add    %dh,%al
  200f41:	ff                   	(bad)  
  200f42:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f45:	00 00                	add    %al,(%rax)
  200f47:	00 02                	add    %al,(%rdx)
  200f49:	04 00                	add    $0x0,%al
  200f4b:	00 00                	add    %al,(%rax)
  200f4d:	00 00                	add    %al,(%rax)
  200f4f:	00 f9                	add    %bh,%cl
  200f51:	ff                   	(bad)  
  200f52:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f55:	00 00                	add    %al,(%rax)
  200f57:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000200fb0 <_GLOBAL_OFFSET_TABLE_>:
  200fb0:	c0 0d 20 00 00 00 00 	rorb   $0x0,0x20(%rip)        # 200fd7 <_GLOBAL_OFFSET_TABLE_+0x27>
	...
  200fc7:	00 56 05             	add    %dl,0x5(%rsi)
  200fca:	00 00                	add    %al,(%rax)
  200fcc:	00 00                	add    %al,(%rax)
  200fce:	00 00                	add    %al,(%rax)
  200fd0:	66 05 00 00          	add    $0x0,%ax
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     %dl,(%rax)
  20100a:	20 00                	and    %al,(%rax)
  20100c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000201010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x4b0>
   a:	74 75                	je     81 <_init-0x4a7>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x75426530>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x499>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	31 29                	xor    %ebp,(%rcx)
  24:	20 37                	and    %dh,(%rdi)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
